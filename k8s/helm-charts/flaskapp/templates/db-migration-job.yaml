{{ if .Values.performDbMigration }}
---

apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Release.Name }}-{{ .Chart.Name }}-migration-job
  labels:
    service: {{ .Release.Name }}-{{ .Chart.Name }}
    app: istio-auth-example
    chart: '{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}'
  annotations:
    "helm.sh/hook": pre-install
    # "helm.sh/hook-delete-policy": hook-succeeded
spec:
  backoffLimit: 1
  template:
    metadata:
      labels:
        service: {{ .Release.Name }}-{{ .Chart.Name }}
        app: istio-auth-example
      annotations:
        sidecar.istio.io/inject: "false"
    spec:
      containers:
      - name: {{ .Chart.Name }}
        image: {{ .Values.image.tag }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command: ["/bin/bash", "-c"]
        args: ["flask db upgrade"]
        env: # get secret env vars
          {{- range .Values.migrationSecrets }}
          - name: {{ .envName }}
            valueFrom:
              secretKeyRef:
                name: {{ .secretName }}
                key: {{ .keyName }}
          {{- end }}
          {{- range .Values.env }}
          - name: {{ .name }}
            value: {{ .value | quote }}
          {{- end }}

      restartPolicy: {{ .Values.migrationJob.restartPolicy }}
{{ end }}
